注意：这题很绕 自己好好理清楚

#include<iostream>
#include<vector>
using namespace std;

void swap(vector<int>& nums, int index) {
	int temp = nums[index];
	nums[index] = index;
	nums[temp] = temp;
}

int findRepeatNumber(vector<int>& nums) {
	int n = nums.size();

	for (int i = 0; i < nums.size(); i++) {
		if (nums[i] < 0 || nums[i] >= n) {
			return -1;
		}

		//注意 这一趟交换完后 i不是原来的i了
		//如果i位置上的数不是i 
		while (i != nums[i] ) {
			//先检查nums[i]位置上的数 如果是nums[i] 即nums[nums[i]] == nums[i]则发现了重复的
			if (nums[nums[i]] == nums[i]) {
				return nums[i];
			}

			//否则交换到i位置的数正确位置
			int temp = nums[i];
			//把temp位置上的数放在i位置上
			nums[i] = nums[temp];
			//把temp位置上的数设为temp 此时调整好了temp位置上的数
			nums[temp] = temp;
		}
	}

	return -1;
}

int main() {
	vector<int> arr = { 2, 3, 1, 0, 2, 5, 3 };
	cout << findRepeatNumber(arr) << endl;
}
