struct TreeNode {
	int val;
	TreeNode *left;
	TreeNode *right;
	TreeNode() : val(0), left(nullptr), right(nullptr) {}
	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
	TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};


class Solution {
public:
	vector<int> res;
	bool isValidBST(TreeNode* root) {
        if(!root) return true;
        process(root);
		for (int i = 0; i < res.size() - 1; i++) {
			if (res[i] >= res[i + 1]) return false;
		}

		return true;
	}

	void process(TreeNode* root) {
		if (!root) return;

		process(root->left);
		res.push_back(root->val);
		process(root->right);
	}
};
