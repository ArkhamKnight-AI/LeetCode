struct TreeNode {
	int val;
	TreeNode *left;
	TreeNode *right;
	TreeNode() : val(0), left(nullptr), right(nullptr) {}
	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
	TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

TreeNode* process(TreeNode* root, TreeNode* p, TreeNode* q) {
	if (!root || root == p || root == q) return root;

	TreeNode* left = process(root->left, p, q);
	TreeNode* right = process(root->right, p, q);

	if (!left && !right) return nullptr;
	else if (left && !right) return left;
	else if (!left && right) return right;
	else return root;
}
