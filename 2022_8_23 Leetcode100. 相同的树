struct TreeNode {
	int val;
	TreeNode *left;
	TreeNode *right;
	TreeNode() : val(0), left(nullptr), right(nullptr) {}
	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
	TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

bool process(TreeNode* left, TreeNode* right) {
	if (!left && !right) return true;
	else if (!left && right) return false;
	else if (left && !right) return false;
	else if (left->val != right->val) return false;

	bool leftInfo = process(left->left, right->left);
	bool rightInfo = process(left->right, right->right);
	
	return leftInfo && rightInfo;
}

bool isSameTree(TreeNode* p, TreeNode* q) {
	return process(p, q);
}
