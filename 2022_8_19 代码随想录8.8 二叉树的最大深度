struct TreeNode {
	int val;
	TreeNode* left;
	TreeNode* right;
	TreeNode(int v) : val(v), left(nullptr), right(nullptr) {}
};

//递归写法
int process(TreeNode* root) {
	if (!root) return 0;

	int leftHeight = process(root->left);

	int rightHeight = process(root->right);

	return max(leftHeight, rightHeight) + 1;
}

int maxDepth(TreeNode* root) {
	return process(root);
}

//非递归写法
int maxDepth(TreeNode* root) {
        if(!root) return 0;

        queue<TreeNode*> q;
        q.push(root);
        int depth = 0;

        while(!q.empty()){
            int size = q.size();
            depth++;
            for(int i = 0; i < size; i++){
                TreeNode* cur = q.front();
                q.pop();
                if(cur->left) q.push(cur->left);
                if(cur->right) q.push(cur->right);
            }
        }

        return depth;
    }
