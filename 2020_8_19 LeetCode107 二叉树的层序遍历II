class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if (root == nullptr) return {};

	vector<vector<int>> res;
	queue<TreeNode*> q;
	q.push(root);

	//每执行一次while循环就处理一层
	while (!q.empty()) {
		int size = q.size();
		vector<int> curres;
		
		for (int i = 0; i < size; i++) {
			TreeNode* cur = q.front();
			q.pop();
			curres.push_back(cur->val);
			if (cur->left) q.push(cur->left);
			if (cur->right) q.push(cur->right);
		}
		res.push_back(curres);
	}
    reverse(res.begin(), res.end());
	return res;
    }
};
